1  int levensteinInstruction(String s1, String s2):
     2     if  s1.length <=  1 || s2.length <= 1
     3     else
     4         String s1l, s1r, s2l, s2r
     5         if  s2.length < s1.length
     6             s1l = s1.substring(0, s1.length / 2)
     7             s1r = s1.substring(s1.length / 2, s1.length)
     8
     9             d = calcD(s1l, s2)
    10             e = calcE(s1r, s2)
    11             k = 0
    12             for i = 1 to s2.length
    13                 if d[i] + e[s2.length - i] < d[k] + e[s2.length - k]
    14                     k = i
    15             s2l = s2.substring(0, k)
    16             s2r = s2.substring(k, s2.length)
    17         else
    18
    19             s2l = s2.substring(0, s2.length / 2)
    20             s2r = s2.substring(s2.length / 2, s2.length)
    21             d = calcD(s2l, s1)
    22             e = calcE(s2r, s1)
    23             k = 0
    24             for i = 1 to s1.length
    25                 if d[i] + e[s1.length - i] < d[k] + e[s1.length - k]
    26                     k = i
    27             s1l = s1.substring(0, k)
    28             s1r = s1.substring(k, s1.length)
    29     return levensteinInstruction(s1l, s2l) + levensteinInstruction(s1r, s2r)
    30
